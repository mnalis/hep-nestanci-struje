#!/usr/bin/perl -T
# Matija Nalis <mnalis-git@voyager.hr> 2015,2016 GPLv3+
# 
# pretrazuje online bazu predvidjenih nestanaka struje i matcha zadani regexp
# jer RSS na stranicama prikazuje samo nestanke struje za danas :(
#
# Usage: hep-nestanak.pl zagreb ZG 'Ti.+ari.+ka'

use strict;
use warnings;
use autodie;
use feature 'say';
use WWW::Mechanize;
use HTML::TreeBuilder::XPath;

my $ELEKTRA_DP = shift;
my $ELEKTRA_LOC = shift;
my $REGEXP = shift;

if (!defined($ELEKTRA_DP) or !defined($ELEKTRA_LOC) or !defined($REGEXP)) {
    say STDERR "Usage: $0 <ELEKTRA_PODRUCJE> <ELEKTRA_POGON> <REGEXP>";
    say STDERR "for example: $0 zagreb ZG 'Savska'";
    exit 1;
}

# no user configurable parts below

my $BASEURL = 'http://www.hep.hr/ods/bez-struje/19?dp=' . $ELEKTRA_DP . '&el=' . $ELEKTRA_LOC;
my $mech = WWW::Mechanize->new();
my $ret='';

foreach my $dan (0..6) {
    my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time + $dan*24*60*60);
    my $datum = sprintf "%02d.%02d.%04d", $mday, $mon+1, $year+1900;
    #print "dan=$dan, datum=$datum\n";

    $mech->get( $BASEURL . '&datum=' . $datum );
    my $res = $mech->res();
    my $content = $res->decoded_content;
    #my $content = do { local $/; open my $fh, '<', 'main.html'; <$fh> };	# DEBUG ONLY

    my $tree= HTML::TreeBuilder::XPath->new;
    $tree->parse_content($content);

    my @sve=$tree->findnodes( '//div[@class="radwrap"]/div' );
 
    my $saveit=0;
    foreach my $node (@sve) {
         my $lokacije_raw = $node->as_HTML;
         if ($saveit) {		# once we find our "class=mjesto", also collect following "class=vrijeme" and "class=clear" before marking next entry
             $ret .= $lokacije_raw;
             if ($lokacije_raw =~ m{class="clear"}i) {
                 $saveit = 0;
                 $ret .= "\n<div class=datum>$datum</div><hr>\n\n";
             }
             next;
         }
         if ($lokacije_raw =~ m{$REGEXP}i) {
             $saveit = 1;
             $ret .= $lokacije_raw;
         }
    }
}

say "$ret" if $ret;
